#!/usr/bin/env ruby

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')

require 'rubygems'
require 'bundler/setup'

require 'railshoster'
require 'gli'

include GLI

version Railshoster::VERSION

program_desc "RailsHoster.com Application Deployment Suite"

desc 'Create new RailsHoster application deployment'
arg_name 'dir_name'
long_desc 'This command helps to deploy a Ruby on Rails application to your RailsHoster account using the application token you have received after signing up.'
command [:init] do |c|
  
  c.desc "Use the RailsHoster application_token pass your account credentials."
  c.flag [:a, :apptoken]      

  c.action do |global_options,options,args|
    
    raise "Argument 'dir_name' is required for the 'init' command." if args.empty?
    raise "Option '-a' or '--apptoken' is require for the 'init' comannd" unless options[:a]
    
    project_git_dir_name = args[0]
        
    init_command = RailsHoster::InitCommand.new(project_git_dir_name)
    init_command.run_by_application_token(options[:a])
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abourt and not call the
  # chosen command
  true
end

post do |global,command,options,args|
  # Post logic here
end

on_error do |exception|
  puts "\n"
  puts "-" * 50
  puts "Sorry. An Exception has occured. Don't worry I try to explain what happened:"
  puts "-" * 50
  puts "The Exception class is: #{exception.class}"
  puts "The Exception message is:\n"
  puts exception.message
  puts "Here is the backtrace:"
  puts "-" * 50
  puts exception.backtrace
  puts "-" * 50
  puts "If this does not help write to support@railshoster.com."
  puts "Please provide the command you invoked, in which directory as well as information about your runtime environment (Ruby Version, OS, ...)."
  
  # Error logic here
  # return false to skip default error handling
  false
end

exit GLI.run(ARGV)
